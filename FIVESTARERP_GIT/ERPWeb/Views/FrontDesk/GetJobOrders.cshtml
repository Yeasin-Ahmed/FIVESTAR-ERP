
@{
    ViewBag.Title = "Job Order List";
}
<div class="row">
    <div class="col-md-12 text-center">
        <div class="card card-gray shadow">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-4"></div>
                    <div class="col-md-4 text-center">
                        <h4><b>Job Order List</b></h4>
                    </div>
                    <div class="col-md-4">
                        <a href="/FrontDesk/CreateJobOrder" title="Create a New Job Order" class="btn btn-outline-primary btn-sm float-lg-right" style="background-color:darkblue" id="btnReset"><i class="fas fa-plus"></i> Job Order</a>
                        <a href="/FrontDesk/CreateAccessoriesInvoice" title="Create a New Job Order" class="btn btn-outline-primary btn-sm float-lg-right" style="background-color: darkmagenta" id="btnReset"><i class="fas fa-plus"></i> Sells Accessories</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-header">
                @Html.AntiForgeryToken()
                <div class="row text-sm">
                    <div class="col-md-2">
                        <label class="col-form-label">JobCode</label>
                        <input type="text" id="txtJobCode" class="form-control form-control-sm" placeholder="Search By JobCode" />
                    </div>
                    <div class="col-md-2">
                        <label class="col-form-label">Model</label>
                        @Html.DropDownList("ddlModelName", (IEnumerable<SelectListItem>)ViewBag.ddlModelName, "--Search By Model--", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger ctrl-changed" })
                    </div>
                    <div class="col-md-2">
                        <label class="col-form-label">IMEI1</label>
                        <input type="text" id="txtIMEINo" class="form-control form-control-sm" placeholder="Search By IMEI1" />
                    </div>
                    <div class="col-md-2">
                        <label class="col-form-label">IMEI2</label>
                        <input type="text" id="txtIMEI2No" class="form-control form-control-sm" placeholder="Search By IMEI2" />
                    </div>
                    <div class="col-md-2">
                        <label class="col-form-label">Mobile No</label>
                        <input type="text" id="txtMobileNo" class="form-control form-control-sm" placeholder="Search By Mobile" />
                    </div>
                    <div class="col-md-2">
                        <label class="col-form-label">JobStatus</label>
                        @Html.DropDownList("ddlStateStatus", (IEnumerable<SelectListItem>)ViewBag.ddlStateStatus, "--Search By Status--", new { @class = "form-control form-control-sm ctrl-changed " })
                    </div>
                </div>
                <div class="row text-sm">
                    <div class="col-md-2">
                        <label class="control-label font-weight-bold">From Date</label>
                        <div class="input-group input-group-sm ">
                            <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptFromDate" />
                            <div class="input-group-prepend cursor-pointer remove-date dptFromDate" style="cursor:pointer">
                                <span class="input-group-text">&#10008;</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <label class="control-label font-weight-bold">To Date</label>
                        <div class="input-group input-group-sm ">
                            <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptToDate" />
                            <div class="input-group-prepend remove-date dptToDate" style="cursor:pointer">
                                <span class="input-group-text">&#10008;</span>
                            </div>
                        </div>
                    </div>
                    @*<div class="col-md-8">
                        <label class="control-label font-weight-bold" style="visibility:hidden">Toooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo Date</label>
                        <a href="/FrontDesk/CreateJobOrder" class="btn btn-outline-primary btn-sm float-lg-right" id="btnReset"><i class="fas fa-plus"></i> Job Order</a>
                    </div>*@
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card shadow">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12 text-sm text-sm" id="dataContainer" style="overflow-y:scroll">
                        @{Html.RenderAction("GetJobOrders", new { @flag = "view" });}
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalJobOrderDetails" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                @Html.AntiForgeryToken()
                <input type="hidden" id="hdfJobOrderId" />
                <h4 id="modalHeading" class="modal-title">JobOrder Details</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" id="dataContainer2">

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalInvoice" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <h4 id="modalHeading" class="modal-title"><span id="spanModalHead">Invoice</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmInvoice">
                    <div class="form-row">
                        <div class="form-group col-md-2">
                            <label for="txtLabourCharge" class="control-label font-weight-bold">LabourCharge</label>
                            <input type="number" name="labourCharge" value="" id="txtLabourCharge" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-2">
                            <label for="txtVat" class="control-label font-weight-bold">VAT</label>
                            <input type="number" name="vat" value="" id="txtVat" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-2">
                            <label for="txtTax" class="control-label font-weight-bold">Tax</label>
                            <input type="number" name="tax" value="" id="txtTax" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-2">
                            <label for="txtDiscount" class="control-label font-weight-bold">Discount</label>
                            <input type="number" name="discount" value="" id="txtDiscount" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-3">
                            <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtRemarks" class="form-control form-control-sm" />
                        </div>
                        <div class="modal-body" id="dataContainer1">

                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer btn-light">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-sm btn-danger float-right" data-dismiss="modal" data-target="#"><i class="fas fa-times"></i> Cancel </button>
                <button type="submit" class="btn btn-sm btn-success float-right" id="btnInvoiceSubmit"><i class="far fa-save"></i> <span id="spanSaveText">Save </span> </button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">

        var pageNo = 1;
        var ddlModelName = $("#ddlModelName");
        var txtMobileNo = $("#txtMobileNo");
        var ddlStateStatus = $("#ddlStateStatus");
        var txtJobCode = $("#txtJobCode");
        var hdfJobOrderId = $("#hdfJobOrderId");
        var txtIMEINo = $("#txtIMEINo");
        var txtIMEI2No = $("#txtIMEI2No");
        //
        var txtLabourCharge = $("#txtLabourCharge");
        var txtVat = $("#txtVat");
        var txtTax = $("#txtTax");
        var txtDiscount = $("#txtDiscount");
        var txtRemarks = $("#txtRemarks");
        var dptFromDate = $("#dptFromDate");
        var dptToDate = $("#dptToDate");

        $(document).ready(function () {
            dptFromDate.prop('readonly', true);
            dptToDate.prop('readonly', true);
            dptFromDate.css("background-color", "#fff");
            dptToDate.css("background-color", "#fff");
            $('#dptFromDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true,
                autoclose: true,
                showOn: "button",
                buttonImageOnly: true,
                buttonImage: "C:\Z Files\ClientPhotos\FIVESTARERP\calendericon2.jpg"
            });
            $('#dptToDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true,
                autoclose: true
            });
        })

        $(document).on('click', 'div.remove-date', function () {
            if ($(this).hasClass("dptToDate")) {
                if (dptToDate.val() !== '') {
                    dptToDate.val('');
                    LoadDataTable();
                }
            }
            if ($(this).hasClass("dptFromDate")) {
                if (dptFromDate.val() !== '') {
                    dptFromDate.val('');
                    LoadDataTable();
                }
            }
        })
        dptFromDate.change(function () {
            LoadDataTable();
        })
        dptToDate.change(function () {
            LoadDataTable();
        })

        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2').select2();

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
        })

        txtMobileNo.keyup(function () {
            LoadDataTable();

        })

        txtJobCode.keyup(function () {
            LoadDataTable();
        })

        txtIMEINo.keyup(function () {
            LoadDataTable();
        })
        txtIMEI2No.keyup(function () {
            LoadDataTable();
        })

        $(document).on('change', '.ctrl-changed', function () {
            LoadDataTable();
        })

        function LoadDataTable() {
            var data = { flag: "search", modelId: TryParseInt(ddlModelName.val(), 0), jobOrderId: 0, mobileNo: $.trim(txtMobileNo.val()), status: ddlStateStatus.val(), jobCode: txtJobCode.val(), iMEI: txtIMEINo.val(), iMEI2: txtIMEI2No.val(), fromDate: dptFromDate.val(), toDate: dptToDate.val(), page: pageNo };

            console.log(data);
            $.when(getReqWithData('html', 'GET', '/FrontDesk/GetJobOrders', data)).then(function (res, status) {
                console.log(status);
                if (status === "success") {
                    $("#dataContainer").fadeOut('500', function () {
                        $("#dataContainer").empty();
                        $("#dataContainer").append(res).fadeIn('500');
                    });
                }
            }).fail(function (error) {
                console.log(error);
            });

            pageNo = 1;
        }

        // Pagination
        $(document).on('click', 'a.page-link', function (e) {
            e.preventDefault();
            if (!$(this).hasClass('current-page')) {
                pageNo = $(this).attr('data-page-no');
                LoadDataTable();
            }
        })

        // View Job Order
        $(document).on('click', 'a.data-item-details', function (e) {
            e.preventDefault();
            var id = $(this).attr("data-item-details");
            getJobOrderDetail("Detail",id)
            //var data = { jobOrderId: id};

            //console.log(data);
            //$.when(getReqWithData('html', 'GET', '/FrontDesk/GetJobOrderDetails', data)).then(function (res, status) {
            //    console.log(status);
            //    if (status === "success") {
            //        $("#dataContainer2").empty();
            //        $("#dataContainer2").append(res).fadeIn('500');
            //        $("#modalJobOrderDetails").modal("show");
            //    }
            //}).fail(function (error) {
            //    console.log(error);
            //});
        })
        //Ts Work Details
        $(document).on('click', 'a.data-item-tsWork', function (e) {
            e.preventDefault();
            var id = $(this).attr("data-item-tsWork");
            getJobOrderDetail("TSWork", id);
        })

        // assign a T.S.
        $(document).on('click', 'a.data-item-assignTS', function (e) {
            e.preventDefault();
            var id = $(this).attr("data-item-assignTS");
            getJobOrderDetail("Assign", id);
        })

        function getJobOrderDetail(flag, id) {
            hdfJobOrderId.val("0");
            if (TryParseInt(id) > 0) {
                hdfJobOrderId.val(id)
                var data = { flag: flag, modelId: 0, jobOrderId: id, mobileNo: '', status: "", jobCode: "", page: 1 };

                console.log(data);
                $.when(getReqWithData('html', 'GET', '/FrontDesk/GetJobOrders', data)).then(function (res, status) {
                    console.log(status);
                    if (status === "success") {
                        $("#dataContainer2").empty();
                        $("#dataContainer2").append(res).fadeIn('500');
                        $("#modalJobOrderDetails").modal("show");
                    }
                }).fail(function (error) {
                    console.log(error);
                });
            }
        }

        // edit status
        function validateStatus() {
            var isValid = true;
            $(".error").addClass("hide");
            if ($(".ddlJobOrderType").val() === "") {
                $(".require-type").removeClass("hide");
                isValid = false;
            }
            return isValid;
        }

        $(document).on('click', '.btnDisapproved', function (e) {
            e.preventDefault();
            if (validateStatus()) {

                bootbox.confirm("Are you sure you want to change the status to <b>Disapproved<b>?", function (result) {
                    if (result) {
                        changeJobOrderStatus(jobOrderStatus.customerDisapproved);
                    }
                })
            }
        })

        //$(document).on('click', '.btnDeliveryDone', function (e) {
        //    e.preventDefault();
        //        bootbox.confirm("Are you sure you want to change the status to <b>Delivery<b>?", function (result) {
        //            if (result) {
        //                changeJobOrderStatus(jobOrderStatus.deliveryDone);
        //            }
        //        })
        //})

        function changeJobOrderStatus(status) {
           // disable(".btnDisapproved");
           // disable(".btnApproved");
            var data = JSON.stringify({ jobOrderId: hdfJobOrderId.val(), status: status, type: $(".ddlJobOrderType").val() });

            $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/FrontDesk/UpdateJobOrderStatus', data, getToken())).then(function (res, status) {
                if (res === true && status === "success") {
                    $("#modalJobOrderDetails").modal("toggle");
                    $('.toastrJobOrderSuccess').trigger('click');
                    LoadDataTable();
                }
                else {
                    $('.toastrJobOrderError').trigger('click');
                }
               // enable(".btnDisapproved");
              //  enable(".btnApproved");
            }).fail(function (error) {
                //enable(".btnDisapproved");
                //enable(".btnApproved");
                console.log(error);
            })

            console.log(data);
           // enable(".btnDisapproved");
           // enable(".btnApproved");
        }

        //btnAssignTS

        function validateTS() {
            var isValid = true;
            $(".error").addClass("hide");
            if ($(".ddlTSName").val() === "") {
                $(".require-ts").removeClass("hide");
                isValid = false;
            }
            return isValid;
        }

        $(document).on('click', '.btnAssignTS', function (e) {
            e.preventDefault();
            if (validateTS()) {
                bootbox.confirm("Are you sure you want to Assign this T.S. to the Job Order?", function (result) {
                    if (result) {
                        assignTStoTheJobOrder();
                    }
                })
            }
        })

        function assignTStoTheJobOrder() {

            disable(".btnAssignTS");
            var data = JSON.stringify({ jobOrderId: hdfJobOrderId.val(), tsId: $(".ddlTSName").val() });

            console.log(data);

            $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/FrontDesk/AssignTSForJobOrder', data, getToken())).then(function (res, status) {
                if (res === true && status === "success") {
                    $("#modalJobOrderDetails").modal("toggle");
                    $('.toastrDefaultSuccess').trigger('click');
                    LoadDataTable();
                }
                else {
                    $('.toastrDefaultError').trigger('click');
                }
                enable(".btnAssignTS");
            }).fail(function (error) {
                enable(".btnAssignTS");
                console.log(error);
            })
            enable(".btnAssignTS");
        }

        $(document).on('click', '.btnDeliveryDone', function (e) {
            e.preventDefault();
            if (validateStatus()) {
                bootbox.confirm("Are you sure you want to change the status to <b>Delivery<b>?", function (result) {
                    if (result) {
                        changeJobOrderStatus(jobOrderStatus.deliveryDone);
                    }
                })
            }
        })
        function changeJobOrderStatus(status) {
            var data = JSON.stringify({ jobOrderId: hdfJobOrderId.val()});

            $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/ReportSS/GetJobOrderReceiptReport', data, getToken())).then(function (res, status) {
                if (res.IsSuccess === true && status === "success") {
                    //alert("Success");
                    setTimeout(function () {
                                    redirectPage('@Url.Action("GetJobOrders")');
                                }, 1000);
                    var pdfWindow = window.open("", "_blank")
                    console.log(res.File);
                    pdfWindow.document.write("<embed  width='100%' height='100%' src='" + res.File + "'></embed >"); // Preview
                    download(res.File, res.FileName, "application/pdf"); // Download
                }
            }).fail(function (error) {
                console.log(error);
            })

            console.log(data);
        }

        // Report
        $("#btnReport").click(function (e) {
            e.preventDefault();
            var data = JSON.stringify({ flag: "search", modelId: TryParseInt(ddlModelName.val(), 0), jobOrderId: 0, mobileNo: $.trim(txtMobileNo.val()), status: ddlStateStatus.val(), jobCode: txtJobCode.val(), iMEI: txtIMEINo.val(), iMEI2: txtIMEI2No.val() });
            //return console.log(data)
            $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/ReportSS/GetJobOrderReport', data, getToken())).then(function (res, status) {
                console.log(res.IsSuccess);
                if (res.IsSuccess === true) {
                    var pdfWindow = window.open("", "_blank")
                    console.log(res.File);
                    pdfWindow.document.write("<embed  width='100%' height='100%' src='" + res.File + "'></embed >"); // Preview
                    download(res.File, res.FileName, "application/pdf"); // Download
                }
            }).fail(function (error) {
                console.log(error);
            })
        })
        $(document).on('click', '.data-report-item', function (e) {
            e.preventDefault();

        })

        function OpenInvoiceModal() {
            $("#modalInvoice").modal("show");
            $(".error").addClass("hide");
        }

        $(document).on('click', '.btnInvoice', function (e) {
            e.preventDefault();
            OpenInvoiceModal();
            var data = {
                jobOrderId: TryParseInt(hdfJobOrderId.val(),0)
            };
            $.when(getReqWithData('html', 'GET', '/FrontDesk/GetPartsUsedStock', data)).then(function (res, status) {
                if (status == "success") {
                    $("#dataContainer1").empty();
                    $("#dataContainer1").append(res);
                }
            }).fail(function (error) {
                console.log(error);
            })
            //clearCtr()
        })


        $("#btnInvoiceSubmit").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
                bootbox.confirm("Are you sure you want to save?", function (result) {
                    if (result) {
                        //disable("#btnSubmit");
                        var totalItemsAmount = 0.00;
                        if ($("#tblPartsUsedQty tbody").length > 0) {
                            totalItemsAmount = TryParseFloat($("#tblPartsUsedQty tfoot tr").children('td').eq(1).html(), 0.00);
                        }
                        var info = {
                            JobOrderId: TryParseInt(hdfJobOrderId.val(), 0),
                            LabourCharge: TryParseFloat(txtLabourCharge.val(), 0.00),
                            VAT: TryParseFloat(txtVat.val(), 0.00),
                            Tax: TryParseFloat(txtTax.val(), 0.00),
                            Discount: TryParseFloat(txtDiscount.val(), 0.00),
                            TotalSPAmount:totalItemsAmount,
                            Remarks: txtRemarks.val(),
                        };
                        //alert("totalItemsAmount="+totalItemsAmount);
                        //return;
                        var details = []; details.length = 0;
                        //empty-row
                        //if (('.empty-row').length > 0) {
                            
                        //}
                        if ($("#tblPartsUsedQty tbody").length > 0) {

                            // 
                            if (($("#tblPartsUsedQty tbody tr").length == 1 && !$("#tblPartsUsedQty tbody tr").hasClass('empty-row')) || $("#tblPartsUsedQty tbody tr").length > 1) {
                                $.each($("#tblPartsUsedQty tbody tr"), function (index, item) {
                                    var tds = $(this).children('td');
                                    var partsId = tds.eq('1').html();
                                    var pName = tds.eq('2').html();
                                    var qty = tds.eq('3').html();
                                    var price = tds.eq('4').html();
                                    var total = tds.eq('5').html();

                                    details.push({
                                        InvoiceDetailId: 0,
                                        PartsId: TryParseInt(partsId, 0),
                                        PartsName: pName,
                                        Quantity: TryParseInt(qty, 0),
                                        SellPrice: TryParseFloat(price, 0),
                                        Total: TryParseFloat(total, 0),
                                    })
                                });
                            }
                            
                        }
                        
                        var data = JSON.stringify({ info: info, details: details});
                        console.log("Invoice");
                        console.log(data);
                      // return console.log(data);
                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/FrontDesk/SaveInvoiceForJobOrder', data, getToken())).then(function (res, status) {
                            console.log(res);
                            console.log(status);
                           // enable("#btnSubmit");
                            if (res == true) {
                                $('.toastrDefaultSuccess').trigger('click');
                                setTimeout(function () {
                                    redirectPage('@Url.Action("GetJobOrders","FrontDesk",new {})');
                                }, 1000);
                            }
                            else {
                                $('.toastrDefaultError').trigger('click');
                            }
                        }).fail(function (error) {
                            consoleLog(error)
                        })
                    }
                });
        });
        //$(document).on('click', '.data-report-item2', function (e) {
        //    e.preventDefault();
        //    //infoId
        //    var id = $(this).attr("data-report-item2");
        //    var url = '/ReportSS/InvoiceReport?infoId=' + TryParseInt(id, 0);
        //    alert(url);
        //    //window.open(+id);

        //    //var data = JSON.stringify({ infoId:});
        //    //console.log(data)
        //    //return console.log(data);
        //    //$.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/ReportSS/InvoiceReport', data, getToken())).then(function (res, status) {
        //    //    console.log(res.IsSuccess);
        //    //    if (res.IsSuccess === true) {
                    
        //    //    }
        //    //}).fail(function (error) {
        //    //    console.log(error);
        //    //})
        //});
        function redirectPage(page) {
            window.location.replace(page);
        }
    </script>
}
