@model IEnumerable<ERPBO.Production.ViewModels.RequsitionInfoViewModel>
@{
    ViewBag.Title = "List of Requisition Information";
    var privilege = (ERPBO.Common.UserPrivilege)ViewBag.UserPrivilege;
}

<div class="row">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-3"></div>
            <div class="col-md-6 text-center">
                <h4><b style="color:darkblue">Production Requisition Info</b></h4>
            </div>
            <div class="col-md-3">
                @if (privilege != null && privilege.Add)
                {
                    <a href="/Production/CreateRequsition" class="btn btn-primary btn-sm float-right" id="btnAddNew"><i class="fa fa-plus"></i> Create New Requisition</a>
                }
            </div>
        </div>
        
        <hr />
    </div>
    <div class="col-md-12 mb-2">
        <h5 class="text-cyan"><b>Search By</b></h5>
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-3">
                <label for="txtReqCode" class="control-label font-weight-bold">Requisition Code</label>
                <input type="text" name="search" id="txtReqCode" class="form-control form-control-sm" placeholder="Search By Requisition Code" onkeyup="tableFilter('#tblReqInfoData tbody tr',this)" />
            </div>
            <div class="col-md-3">
                <label for="ddlWarehouseName" class="control-label font-weight-bold">Warehouse Name</label>
                @Html.DropDownList("ddlWarehouseName", (IEnumerable<SelectListItem>)ViewBag.ddlWarehouse, "--Select Warehouse--", new { @class = "form-control form-control-sm ctrl-changed" })
                <span class="error hide required-warehouseName font-weight-bold">Required Warehouse Name!</span>
            </div>
            <div class="col-md-3">
                <label for="ddlStateStatus" class="control-label font-weight-bold">StateStatus</label>
                @Html.DropDownList("ddlStateStatus", (IEnumerable<SelectListItem>)ViewBag.ddlStateStatus, "--Select Status--", new { @class = "form-control form-control-sm ctrl-changed" })
            </div>
            <div class="col-md-3">
                <label for="ddlLineNumber" class="control-label font-weight-bold">Line Number</label>
                @Html.DropDownList("ddlLineNumber", (IEnumerable<SelectListItem>)ViewBag.ddlLineNumber, "--Select LineNumber--", new { @class = "form-control form-control-sm ctrl-changed" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                <label for="ddlModelName" class="col-form-label">Model Name</label>
                @Html.DropDownList("ddlModelName", (IEnumerable<SelectListItem>)ViewBag.ddlModelName, "--Select ModelName--", new { @class = "form-control form-control-sm ctrl-changed select2 select2-danger" })
            </div>
            <div class="col-md-3">
                <label class="col-form-label">Requisition Type</label>
                @Html.DropDownList("ddlRequisitionType", (IEnumerable<SelectListItem>)ViewBag.ddlRequisitionTypes, "--Select Requisition Type--", new { @class = "form-control form-control-sm ctrl-changed" })
            </div>
            <div class="col-md-3">
                <label class="col-form-label">From Date</label>
                <div class="input-group input-group-sm ">
                    <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptFromDate" />
                    <div class="input-group-prepend cursor-pointer remove-date dptFromDate" style="cursor:pointer">
                        <span class="input-group-text">&#10008;</span>
                    </div>
                </div>

            </div>
            <div class="col-md-3">
                <label class="col-form-label">To Date</label>
                <div class="input-group input-group-sm ">
                    <input type="text" class="form-control form-control-sm date-datePicker ctrl-changed" id="dptToDate" />
                    <div class="input-group-prepend remove-date dptToDate" style="cursor:pointer">
                        <span class="input-group-text">&#10008;</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12" id="dataContainer1">
        @{Html.RenderAction("GetReqInfoParitalList");}
    </div>

    <div class="modal fade" id="modalReqDetails" role="dialog" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header alert-primary">
                    <input type="hidden" id="hdfReqInfoId" />
                    <input type="hidden" id="hdfRowIndex" />
                    <h4 id="modalHeading" class="modal-title">Requisition Item Details</h4>
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
                </div>
                <div class="modal-body" id="dataContainer">

                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalReqEdit" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header alert-primary">
                <input type="hidden" id="hdfReqInfoId" />
                <input type="hidden" id="hdfRowIndex" />
                <h4 id="modalHeading" class="modal-title">Requisition Item Edit</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body" id="dataContainer2">
            </div>
            <div class="modal-footer">
                @if (privilege != null && privilege.Edit)
                {
                    <button type="submit" class="btn btn-outline-success" id="btnUpdate">Save <i class="fas fa-paper-plane"></i></button>
                }
            </div>
        </div>
    </div>
</div>




@section scripts{
    <script type="text/javascript">
        var txtReqCode = $("#txtReqCode");
        var ddlWarehouseName = $("#ddlWarehouseName");
        var ddlModelName = $("#ddlModelName");
        var ddlStateStatus = $("#ddlStateStatus");
        var ddlLineNumber = $("#ddlLineNumber");
        var dptFromDate = $("#dptFromDate");
        var dptToDate = $("#dptToDate");
        var hdfReqInfoId = $("#hdfReqInfoId");
        var hdfRowIndex = $("#hdfRowIndex");
        var ddlRequisitionType = $("#ddlRequisitionType")
        var pageNo = 1;

        $(document).ready(function () {
            //Initialize Select2 Elements
            $('.select2').select2();

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            });
            dptFromDate.prop('readonly', true);
            dptToDate.prop('readonly', true);
            dptFromDate.css("background-color", "#fff");
            dptToDate.css("background-color", "#fff");
            $('#dptFromDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true
            });
            $('#dptToDate').datepicker({
                format: "dd MM yyyy",
                orientation: "bottom auto",
                todayHighlight: true
            });
        })

        $(document).on('click', 'div.remove-date', function () {
            if ($(this).hasClass("dptToDate")) {
                if (dptToDate.val() !== '') {
                    dptToDate.val('');
                    LoadDataTable();
                }
            }
            if ($(this).hasClass("dptFromDate")) {
                if (dptFromDate.val() !== '') {
                    dptFromDate.val('');
                    LoadDataTable();
                }
            }
        })

        txtReqCode.keyup(function () {
            LoadDataTable();
        })

        $(document).on('change', '.ctrl-changed', function () {
            LoadDataTable();
        })

        function LoadDataTable() {
            var data = { reqCode: txtReqCode.val().trim(), warehouseId: TryParseInt(ddlWarehouseName.val(), 0), modelId: TryParseInt(ddlModelName.val(), 0), status: ddlStateStatus.val(), line: TryParseInt(ddlLineNumber.val(), 0), fromDate: dptFromDate.val(), toDate: dptToDate.val(), requisitionType: ddlRequisitionType.val(), page: pageNo };

            $.when(getReqWithData('html', 'GET', '/Production/GetReqInfoParitalList', data)).then(function (res, status) {
                if (status === "success") {
                    $("#dataContainer1").fadeOut('500', function () {
                        $("#dataContainer1").empty();
                        $("#dataContainer1").append(res).fadeIn('500');
                    });
                }
            }).fail(function (error) {
                console.log(error);
            });
            pageNo = 1;
            console.log(data);
        }

        // Pagination
        $(document).on('click', 'a.page-link', function (e) {
            e.preventDefault();
            if (!$(this).hasClass('current-page')) {
                //alert('Page Clicked');
                pageNo = $(this).attr('data-page-no');
                //console.log('Page No');
                //console.log(!isNaN(pageNo));
                LoadDataTable();
            }
        })

        function OpenModal() {
            $("#dataContainer").empty();
            hdfReqInfoId.val('0');
            hdfRowIndex.val("");
            $("#modalReqDetails").modal("show");
        }

        $(document).on("click", "a.data-details", function (e) {
            e.preventDefault();
            OpenModal();
            var data = {
                reqId: TryParseInt($(this).attr("data-details"), 0)
            };
            var idx = $(this).parent().parents('tr').index();
            $.when(getReqWithData('html', 'GET', '/Production/GetRequsitionDetails', data)).then(function (res, status) {
                if (status == "success") {
                    OpenModal();
                    hdfReqInfoId.val(data.reqId);
                    hdfRowIndex.val(idx)
                    $("#dataContainer").empty();
                    $("#dataContainer").append(res);
                }
            }).fail(function (error) {
                console.log(error);
            })
        })

        $(document).on('click', ".btnAccept", function (e) {
            e.preventDefault();
            fnRequisitionStateChange(hdfReqInfoId.val(), hdfRowIndex.val(), reqStatus.accepted);
        })

        $(document).on('click', ".btnRecheck", function (e) {
            e.preventDefault();
            fnRequisitionStateChange(hdfReqInfoId.val(), hdfRowIndex.val(), reqStatus.pending);
        })

        function fnRequisitionStateChange(id, index, status) {
            if (id > 0) {
                var data = JSON.stringify({ reqId: id, status: status });
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Production/SaveRequisitionStatus', data, getToken())).then(function (res, status) {
                    if (status == "success" && res === true) {
                        $(".toastrDefaultSuccess").trigger('click');
                        //alert("Requisition State has been changed successfully");
                        $("#modalReqDetails").modal("toggle").toggle("fast");
                        hdfReqInfoId.val('0');
                        hdfRowIndex.val("");
                        removeTableRow("#tblReqInfoData tbody", index);
                        setTimeout(function () {
                            LoadDataTable();
                        }, 1500);
                    }
                }).fail(function (error) {
                    console.log(error);
                    $(".toastrDefaultError").trigger('click');
                })
            }
        }

        ///////Modal data Edit
        function openModal() {
            $("#dataContainer2").empty();
            $("#modalReqEdit").modal("show");
        }
        $(document).on("click", "a.data-edit-item", function (e) {
            e.preventDefault();
            openModal();
            var data = {
                reqId: TryParseInt($(this).attr("data-edit-item"), 0)
            };
            var idx = $(this).parent().parents('tr').index();
            $.when(getReqWithData('html', 'GET', '/Production/GetRequsitionDetailsEdit', data)).then(function (res, status) {
                if (status == "success") {
                    openModal();
                    hdfReqInfoId.val(data.reqId);
                    hdfRowIndex.val(idx)
                    $("#dataContainer2").empty();
                    $("#dataContainer2").append(res);
                }
            }).fail(function (error) {
                console.log(error);
            })
        });

        function  validateUpdateReq() {
            var isValid = true;
            $.each($("#tblReqDetailsData tbody tr"), function (index,item) {
                var qty = $(this).children('td').eq(6).children('input').val();
                if (TryParseInt(qty, 0) <= 0) {
                    isValid = false;
                }
            })
            return isValid;
        }

        $("#btnUpdate").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            if (validateUpdateReq() === true)
            {
                bootbox.confirm("Are you sure you want to save", function (result) {
                    if (result === true) {
                        var reqDetails = [];
                        reqDetails.length = 0;
                        $.each($("#tblReqDetailsData tbody tr"), function () {
                            var tds = $(this).children('td');
                            var reqdId = tds.eq('1').html();
                            var iTypeId = tds.eq('2').html();
                            var iId = tds.eq('4').html();
                            var qty = tds.eq('6').children('input').val();

                            reqDetails.push({
                                ReqDetailId: TryParseInt(reqdId, 0),
                                ItemTypeId: TryParseInt(iTypeId, 0),
                                ItemId: TryParseInt(iId, 0),
                                Quantity: TryParseInt(qty, 0)
                            });
                        });

                        var trinfo1 = $('#tblReqInfoForEdit tbody').children('tr').eq('0');
                        var reqid = trinfo1.children('td').eq('0').html();
                        var lineid = trinfo1.children('td').eq('3').html();

                        var trinfo2 = $('#tblReqInfoForEdit tbody').children('tr').eq('1');
                        var warid = trinfo2.children('td').eq('0').html();
                        var desid = trinfo2.children('td').eq('3').html();
                        var rtype = trinfo2.children('td').eq('6').html();

                        var requsitionInfo = {
                            ReqInfoId:TryParseInt(reqid, 0),
                            LineId: TryParseInt(lineid, 0),
                            WarehouseId:TryParseInt(warid, 0),
                            DescriptionId: TryParseInt(desid, 0),
                            RequisitionType: rtype,
                            ReqDetails: reqDetails
                        };
                        console.log(requsitionInfo);
                        var data = JSON.stringify({ model: requsitionInfo });
                        console.log(data);

                        $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Production/SaveRequsition', data, getToken())).then(function (res, status) {
                            console.log(res);
                            console.log(status);
                            enable("#btnUpdate");
                            if (res == true) {
                                $('.toastrDefaultSuccess').trigger('click').fadeOut(1000);
                                $("#modalReqEdit").modal('toggle');
                                LoadDataTable();
                            }
                            else {
                                $('.toastrDefaultError').trigger('click').fadeOut(1000);
                            }
                        }).fail(function (error) {
                            consoleLog(error)
                        })
                    }
                })
            }
            else {
                bootbox.alert('One/More Item quantity is 0/empty')
            }
            
        })

        // Report 
        $(document).on('click', '.data-report-item', function (e) {
            e.preventDefault();
            var id = $(this).attr('data-report-item');
            if (TryParseInt(id, 0) > 0) {
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Report/GetProductionRequisitionReport', JSON.stringify({ reqInfoId: id }), getToken())).then(function (res, status) {
                    console.log(res.IsSuccess);
                    if (res.IsSuccess === true)
                    {
                        //var thisUrl = '@Url.Action("Report", "GetYourReport")' + '?id=' + res.Id;
                        //console.log('');
                        //console.log(thisUrl);
                        //window.location = "/Report/GetYourReport?id="+ res.Id;
                        var pdfWindow = window.open("", "_blank")
                        console.log(res.File);
                        pdfWindow.document.write("<embed  width='100%' height='100%' src='" + res.File + "'></embed >");
                        download(res.File, res.FileName, "application/pdf");
                    }
                }).fail(function (error) {
                    console.log(error);
                })
            }   
        })
    </script>
}