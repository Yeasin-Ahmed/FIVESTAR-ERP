@using ERPBO.Production.ViewModels
@{
    ViewBag.Title = "Index";
    int sl = 0;
    string badge = string.Empty;
}
<div class="row">
    <div class="col-md-12">
        <h1 class="m-0 text-dark"><i class="fas fa-fire" style="color:#ff7615"></i> Dashboard</h1>
        <hr />
    </div>
</div>
<div class="row">
    @Html.AntiForgeryToken()
    <div class="col-sm-3 col-6">
        <div class="card card-indigo">
            <div class="card-header border-transparent">
                <h3 class="card-title">Today Production</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body p-0" style="min-height:200px">
                @if (((IEnumerable<DashboardLineWiseProductionViewModel>)ViewBag.DashboardLineWiseProductionViewModel).Count() > 0)
                {
                    <table class="table table-striped table-valign-middle">
                        <thead>
                            <tr>
                                <th>Line Number</th>
                                <th class="text-center">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var finish in (IEnumerable<DashboardLineWiseProductionViewModel>)ViewBag.DashboardLineWiseProductionViewModel)
                            {
                                <tr>
                                    <td>@finish.LineNumber</td>
                                    <td class="text-center text-bold">@finish.Total</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="text-center text-indigo" style="width:100%;height:100%">
                        <div style="position:absolute;top:40%;left:26%">
                            <i class="fas fa-box-open fa-5x"></i>
                            <p class="text-dark text-bold">NO PRODUCTION</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-sm-3 col-6">
        <div class="card card-indigo">
            <div class="card-header border-transparent">
                <h3 class="card-title">OverAll Production</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body p-0" style="min-height:200px">
                @if (((IEnumerable<DashboardLineWiseProductionViewModel>)ViewBag.DashboardLineWiseOverallProductionViewModel).Count() > 0)
                {
                    <table class="table table-striped table-valign-middle">
                        <thead>
                            <tr>
                                <th>Line Number</th>
                                <th class="text-center">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var finish in (IEnumerable<DashboardLineWiseProductionViewModel>)ViewBag.DashboardLineWiseOverallProductionViewModel)
                            {
                                <tr>
                                    <td>@finish.LineNumber</td>
                                    <td class="text-center text-bold">@finish.Total</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="text-center text-indigo" style="width:100%;height:100%">
                        <div style="position:absolute;top:40%;left:26%">
                            <i class="fas fa-box-open fa-5x"></i>
                            <p class="text-dark text-bold">NO PRODUCTION</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-sm-3 col-6">
        <div class="card card-primary">
            <div class="card-header border-transparent">
                <h3 class="card-title">Today Faulty</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body p-0" style="min-height:200px">
                <div class="table table-bordered table-responsive">
                    @if (((IEnumerable<DashboardFacultyWiseProductionViewModel>)ViewBag.DashboardFacultyWiseProductionViewModel).Count() > 0)
                    {
                        <table class="table m-0">
                            <thead>
                                <tr>
                                    <th class="text-center">Faculty</th>
                                    <th class="text-center">Total</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var faculty in (IEnumerable<DashboardFacultyWiseProductionViewModel>)ViewBag.DashboardFacultyWiseProductionViewModel)
                                {
                                    <tr>
                                        <td>@faculty.FaultyCase</td>
                                        <td class="text-center text-bold">@faculty.Total</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="text-center text-primary" style="width:100%;height:100%">
                            <div style="position:absolute;top:40%;left:32%">
                                <i class="fas fa-heart-broken fa-5x"></i>
                                <p class="text-dark text-bold">NO FAULTY</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-3 col-6">
        <div class="card card-primary">
            <div class="card-header border-transparent">
                <h3 class="card-title">OverAll Faulty</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body p-0" style="min-height:200px">
                @if (((IEnumerable<DashboardFacultyWiseProductionViewModel>)ViewBag.DashboardFacultyWiseOverAllProductionViewModel).Count() > 0)
                {
                    <table class="table table-striped table-valign-middle">
                        <thead>
                            <tr>
                                <th class="">Faculty</th>
                                <th class="text-center">Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var Ofaculty in (IEnumerable<DashboardFacultyWiseProductionViewModel>)ViewBag.DashboardFacultyWiseOverAllProductionViewModel)
                            {
                                <tr>
                                    <td>@Ofaculty.FaultyCase</td>
                                    <td class="text-center text-bold">@Ofaculty.Total</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="text-center text-primary" style="width:100%;height:100%">
                        <div style="position:absolute;top:40%;left:32%">
                            <i class="fas fa-heart-broken fa-5x"></i>
                            <p class="text-dark text-bold">NO FAULTY</p>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card card-gray">
            <div class="card-header border-transparent">
                <h3 class="card-title text-bold text-white"><i class="fas fa-gavel"></i> Production Requisition Status</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-tool" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="row">
                    <div class="col-md-2">
                        <div class="info-box">
                            <span class="info-box-icon bg-primary">
                                <i class="fas fa-flag"></i>
                            </span>
                            <div class="info-box-content">
                                <span class="info-box-text">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionAccepted).StateStatus)</span>
                                <span class="info-box-number">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionAccepted).TotalCount)</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="info-box">
                            <span class="info-box-icon bg-success">
                                <i class="fas fa-flag"></i>
                            </span>
                            <div class="info-box-content">
                                <span class="info-box-text">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionApproved).StateStatus)</span>
                                <span class="info-box-number">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionApproved).TotalCount)</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="info-box">
                            <span class="info-box-icon bg-warning">
                                <i class="fas fa-flag"></i>
                            </span>
                            <div class="info-box-content">
                                <span class="info-box-text">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionPending).StateStatus)</span>
                                <span class="info-box-number">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionPending).TotalCount)</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="info-box">
                            <span class="info-box-icon bg-primary">
                                <i class="fas fa-flag"></i>
                            </span>
                            <div class="info-box-content">
                                <span class="info-box-text">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionRecheck).StateStatus)</span>
                                <span class="info-box-number">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionRecheck).TotalCount)</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="info-box">
                            <span class="info-box-icon bg-secondary">
                                <i class="fas fa-flag"></i>
                            </span>
                            <div class="info-box-content">
                                <span class="info-box-text">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionCancel).StateStatus)</span>
                                <span class="info-box-number">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionCancel).TotalCount)</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="info-box">
                            <span class="info-box-icon bg-danger">
                                <i class="fas fa-flag"></i>
                            </span>
                            <div class="info-box-content">
                                <span class="info-box-text">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionReject).StateStatus)</span>
                                <span class="info-box-number">@(((DashboardRequisitionSummeryViewModel)ViewBag.RequisitionReject).TotalCount)</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header border-0">
                <h3 class="card-title">
                    <i class="fas fa-th mr-1"></i>
                    Line Wise Last 30 Days Production Graph
                </h3>
                <div class="card-tools">
                    <button type="button" class="btn bg-info btn-sm" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn bg-info btn-sm" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div style="width:100%;height:100%;">
                    <canvas class="chart" id="daylineChart" style="min-height: 300px; height: 300px; max-height: 300px; min-width: 100%;max-width:960px"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header border-0">
                <h3 class="card-title">
                    <i class="fas fa-th mr-1"></i>
                    Model Wise Last 30 Days Production Graph
                </h3>
                <div class="card-tools">
                    <button type="button" class="btn bg-info btn-sm" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                    <button type="button" class="btn bg-info btn-sm" data-card-widget="remove">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div style="width:100%;height:100%;">
                    <canvas class="chart" id="modellineChart" style="min-height: 300px; height: 300px; max-height: 300px; min-width: 100%;max-width:960px"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script type="text/javascript">

        $(document).ready(function () {
            $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/User/GetChartData', null, getToken())).then(function (res, status) {
                if (status === 'success') {
                    console.log(res);
                    GenerateDayLineProductionChart(res.lines, res.months, res.charts);
                    GenerateDayModelProductionChart(res.models, res.months2, res.charts2);
                }
                else {
                    $(".toastrDefaultError").trigger('click');
                    $(".toastrDefaultError").fadeOut(800);
                }
            }).fail(function (error) {
                console.log(error);
                $(".toastrDefaultError").trigger('click');
                $(".toastrDefaultError").fadeOut(800);
            })
        })

        var colors = ["#27AE60", "#ffc107", "#8D6E63", "#BA68C8", "#2196F3", "#009688", "#D4E157", "#9E9E9E", "#607D8B", "#CC3333", "#DC7633", "#E91E63", "#000", "#000", "#000", "#000", "#000", "#000", "#000", "#000", "#000", "#000", "#000", "#000", "#000"];

        function GenerateDayLineProductionChart(line, month, data) {
            var canvas = document.getElementById('daylineChart');
            canvas.width = 960;
            canvas.height = 300;

            var myCanvas = canvas.getContext('2d');
            var line = line;
            var month = month;
            var data = data;

            var mydataSets = [];
            mydataSets.length = 0;

            for (var i = 0; i < line.length; i++) {

                mydataSets.push({
                    label: line[i],
                    fill: false,
                    borderWidth: 2,
                    lineTension: 0,
                    spanGaps: true,
                    borderColor: colors[i],
                    pointRadius: 3,
                    pointHoverRadius: 7,
                    pointColor: colors[i],
                    pointBackgroundColor: colors[i],
                    data: data[i]
                })
            }
            console.log('My data set');
            console.log(mydataSets);

            var chartData = {
                labels: month,
                datasets: mydataSets
            };

            console.log(chartData);

            var ChartOptions = {
                maintainAspectRatio: false,
                responsive: true,
                legend: {
                    display: false,
                },
                scales: {
                    xAxes: [{
                        ticks: {
                            fontColor: '#efefef',
                        },
                        gridLines: {
                            display: false,
                            color: '#efefef',
                            drawBorder: false,
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            stepSize: 2000,
                            fontColor: '#efefef',

                        },
                        gridLines: {
                            display: true,
                            color: '#efefef',
                            drawBorder: false,
                        }
                    }]
                }
            }
            Chart.defaults.global.legend.labels.usePointStyle = true;
            var chart = new Chart(myCanvas, {
                type: 'line',
                data: chartData,
                options: {
                    maintainAspectRatio: false,
                    responsive: true,
                    scales: {
                        yAxes: [{
                            ticks: {
                                fontColor: "#000",
                                fontStyle: "bold",
                                beginAtZero: true,
                                maxTicksLimit: 5, //5
                                //padding: 3 // 20
                            },
                            gridLines: {
                                //drawTicks: false,
                                //display: false,
                            }

                        }],
                        xAxes: [{
                            gridLines: {
                                //zeroLineColor: "transparent"
                            },
                            ticks: {
                                padding: 20, //20
                                fontColor: "rgba(0,0,0,0.5)",
                                fontStyle: "bold"
                            }
                        }]
                    }
                }
            });
        }

        function GenerateDayModelProductionChart(model, month, data) {
            var canvas = document.getElementById('modellineChart');
            canvas.width = 960;
            canvas.height = 300;

            var myCanvas = canvas.getContext('2d');
            var model = model;
            var month = month;
            var data = data;

            var mydataSets = [];
            mydataSets.length = 0;

            for (var i = 0; i < model.length; i++) {

                mydataSets.push({
                    label: model[i],
                    fill: false,
                    borderWidth: 2,
                    lineTension: 0,
                    spanGaps: true,
                    borderColor: colors[i],
                    pointRadius: 3,
                    pointHoverRadius: 7,
                    pointColor: colors[i],
                    pointBackgroundColor: colors[i],
                    data: data[i]
                })
            }
            console.log('My data set');
            console.log(mydataSets);

            var chartData = {
                labels: month,
                datasets: mydataSets
            };

            console.log(chartData);

            var ChartOptions = {
                maintainAspectRatio: false,
                responsive: true,
                legend: {
                    display: false,
                },
                scales: {
                    xAxes: [{
                        ticks: {
                            fontColor: '#efefef',
                        },
                        gridLines: {
                            display: false,
                            color: '#efefef',
                            drawBorder: false,
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            stepSize: 2000,
                            fontColor: '#efefef',

                        },
                        gridLines: {
                            display: true,
                            color: '#efefef',
                            drawBorder: false,
                        }
                    }]
                }
            }
            Chart.defaults.global.legend.labels.usePointStyle = true;
            var chart = new Chart(myCanvas, {
                type: 'line',
                data: chartData,
                options: {
                    maintainAspectRatio: false,
                    responsive: true,
                    scales: {
                        yAxes: [{
                            ticks: {
                                fontColor: "#000",
                                fontStyle: "bold",
                                beginAtZero: true,
                                maxTicksLimit: 5, //5
                                //padding: 3 // 20
                            },
                            gridLines: {
                                //drawTicks: false,
                                //display: false,
                            }

                        }],
                        xAxes: [{
                            gridLines: {
                                //zeroLineColor: "transparent"
                            },
                            ticks: {
                                padding: 20, //20
                                fontColor: "rgba(0,0,0,0.5)",
                                fontStyle: "bold"
                            }
                        }]
                    }
                }
            });
        }

    </script>
}


