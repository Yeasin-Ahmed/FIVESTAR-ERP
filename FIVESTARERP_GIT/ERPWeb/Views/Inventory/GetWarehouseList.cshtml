@model IEnumerable<ERPBO.Inventory.ViewModels.WarehouseViewModel>
@{
    ViewBag.Title = "List Of Warehouse";
    int sl = 0;
    string badge = string.Empty;
    var privilege = (ERPBO.Common.UserPrivilege)ViewBag.UserPrivilege;
}


<div class="row">
    <div class="col-md-12">
        <div class="card card-primary card-outline card-tabs" style="margin-top:-20px">
            <div class="card-header p-0 pt-1 border-bottom-0">
                <ul class="nav nav-tabs" id="custom-tabs-two-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="custom-tabs-two-warehouseList-tab" data-toggle="pill" href="#custom-tabs-two-warehouseList" role="tab" aria-controls="custom-tabs-two-warehouseList" aria-selected="true">Warehouse List</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-two-descriptionList-tab" data-toggle="pill" href="#custom-tabs-two-descriptionList" role="tab" aria-controls="custom-tabs-two-descriptionList" aria-selected="false">Description List</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-two-itemTypeList-tab" data-toggle="pill" href="#custom-tabs-two-itemTypeList" role="tab" aria-controls="custom-tabs-two-itemTypeList" aria-selected="false">Item Type List</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-two-unitList-tab" data-toggle="pill" href="#custom-tabs-two-unitList" role="tab" aria-controls="custom-tabs-two-unitList" aria-selected="false">Unit List</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-two-itemList-tab" data-toggle="pill" href="#custom-tabs-two-itemList" role="tab" aria-controls="custom-tabs-two-itemList" aria-selected="false">Item List</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-two-IQCList-tab" data-toggle="pill" href="#custom-tabs-two-IQCList" role="tab" aria-controls="custom-tabs-two-IQCList" aria-selected="false">IQC List</a>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content" id="custom-tabs-two-tabContent">
                    @Html.AntiForgeryToken()

                    <div class="tab-pane fade show active" id="custom-tabs-two-warehouseList" role="tabpanel" aria-labelledby="custom-tabs-two-warehouseList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    List Of Warehouse
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                                @if (privilege.Add)
                                                {
                                                    <button class="btn btn-primary btn-sm float-lg-right" style="background-color:darkblue" id="btnAddNew"><i class="fa fa-plus"></i> Create Warehouse</button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card card-navy">
                                    <div class="card-header">
                                        <h6 class="card-title">Search By</h6>
                                    </div>
                                    <div class="card-body text-sm">
                                        <div class="row" style="margin-top:-15px">
                                            <div class="col-md-4">
                                                <input type="text" name="search" id="searchBy" class="form-control form-control-sm" placeholder="Search By Anything" onkeyup="tableFilter('.tblWarehouseData tbody tr',this)" />
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-md-4">
                                               
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="col-md-12" id="dataContainer">
                                            @{Html.RenderAction("_GetWarehousePartialList");}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade show" id="custom-tabs-two-descriptionList" role="tabpanel" aria-labelledby="custom-tabs-two-descriptionList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Description List
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card card-navy">
                                    <div class="card-header">
                                        <h6 class="card-title">Search By</h6>
                                    </div>
                                    <div class="card-body text-sm">
                                        <div class="row" style="margin-top:-15px">
                                            <div class="col-md-4">
                                                @*<input type="text" name="searchDescription" id="searchByDescription" class="form-control form-control-sm" placeholder="Search By Anything" onkeyup="tableFilter('.tblDescriptionData tbody tr',this)" />*@
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-md-4">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="col-md-12" id="dataContainer2">
                                            @{Html.RenderAction("_GetDescriptionPartialList");}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade show " id="custom-tabs-two-itemTypeList" role="tabpanel" aria-labelledby="custom-tabs-two-itemTypeList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Item Type List
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                                @if (privilege.Add)
                                                {
                                                    <button class="btn btn-primary btn-sm float-lg-right" style="background-color:darkblue" id="btnAddNewitemType"><i class="fa fa-plus"></i>Add New ItemType</button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card card-navy">
                                    <div class="card-header">
                                        <h6 class="card-title">Search By</h6>
                                    </div>
                                    <div class="card-body text-sm">
                                        <div class="row" style="margin-top:-15px">
                                            <div class="col-md-4">
                                                <input type="text" name="searchitemType" id="searchByitemType" class="form-control form-control-sm" placeholder="Search By Anything" onkeyup="tableFilter('.tblItemTypeData tbody tr',this)" />
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-md-4">
                                               
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="col-md-12" id="dataContainer3">
                                            @{Html.RenderAction("_GetItemTypePartialList");}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade show " id="custom-tabs-two-unitList" role="tabpanel" aria-labelledby="custom-tabs-two-unitList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Unit List
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                                @if (privilege.Add)
                                                {
                                                    <button class="btn btn-primary btn-sm float-lg-right" style="background-color:darkblue" id="btnAddNewUnit"><i class="fa fa-plus"></i> Add New Unit</button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card card-navy">
                                    <div class="card-header">
                                        <h6 class="card-title">Search By</h6>
                                    </div>
                                    <div class="card-body text-sm">
                                        <div class="row" style="margin-top:-15px">
                                            <div class="col-md-4">
                                                <input type="text" name="searchUnit" id="searchByUnit" class="form-control form-control-sm" placeholder="Search By Anything" onkeyup="tableFilter('.tblUnitData tbody tr',this)" />
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-md-4 text-right">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="col-md-12" id="dataContainer4">
                                            @{Html.RenderAction("_GetAllUnitPartialList");}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade show " id="custom-tabs-two-itemList" role="tabpanel" aria-labelledby="custom-tabs-two-itemList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    Item List
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                                @if (privilege.Add)
                                                {
                                                    <button class="btn btn-primary btn-sm float-lg-right" style="background-color:darkblue" id="btnAddNewItem"><i class="fa fa-plus"></i> Create New Item</button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card card-navy">
                                    <div class="card-header">
                                        <h6 class="card-title">Search By</h6>
                                    </div>
                                    <div class="card-body text-sm">
                                        <div class="row" style="margin-top:-15px">
                                            <div class="col-md-4">
                                                <input type="text" name="searchItem" id="searchByItem" class="form-control form-control-sm" placeholder="Search By Anything" onkeyup="tableFilter('.tblItemData tbody tr',this)" />
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-md-4 text-right">
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="col-md-12" id="dataContainer5">
                                            @{Html.RenderAction("_GetItemPartialList");}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade show" id="custom-tabs-two-IQCList" role="tabpanel" aria-labelledby="custom-tabs-two-IQCList-tab">
                        <div class="row" style="margin-top:-15px">
                            <div class="col-md-12">
                                <div class="card card-gray-dark">
                                    <div class="card-header">
                                        <div class="row">
                                            <div class="col-md-3">
                                            </div>
                                            <div class="col-md-6">
                                                <h5 class="text-center text-bold">
                                                    List Of IQC
                                                </h5>
                                            </div>
                                            <div class="col-md-3">
                                                @if (privilege.Add)
                                                {
                                                    <button class="btn btn-primary btn-sm float-lg-right" style="background-color:darkblue" id="btnAddNewIQC"><i class="fa fa-plus"></i> Create IQC</button>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card card-navy">
                                    <div class="card-header">
                                        <h6 class="card-title">Search By</h6>
                                    </div>
                                    <div class="card-body text-sm">
                                        <div class="row" style="margin-top:-15px">
                                            <div class="col-md-4">
                                                <input type="text" name="searchIQC" id="searchByIQC" class="form-control form-control-sm" placeholder="Search By Anything" onkeyup="tableFilter('.tblIQCData tbody tr',this)" />
                                            </div>
                                            <div class="col-md-4"></div>
                                            <div class="col-md-4">
                                               
                                            </div>
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12" style="margin-top:-10px">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="col-md-12" id="dataContainer6">
                                            @{Html.RenderAction("GetIQCList");}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="modalWarehouse" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <h4 id="modalHeading" class="modal-title">@*<i class="fas fa-angle-double-right"></i>*@<span id="spanModalHead">Add New Warehouse</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmWarehouse">
                    <input type="hidden" name="Id" id="hdfWarehouseId" />
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtWarehousename" class="control-label font-weight-bold">Warehouse Name</label>
                            <input type="text" name="warehouseName" value="" id="txtWarehousename" class="form-control form-control-sm" />
                            <span class="error hide required-warehouseName font-weight-bold">Input Warehouse Name!</span>
                            <span class="error hide duplicate-warehouseName font-weight-bold">Already WarehouseName Exist!</span>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtRemarks" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <div class="form-control">
                                <input type="checkbox" id="chkStatestatus" /> <b>Is Active?</b>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer btn-default">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-outline-danger btn-sm float-right" data-dismiss="modal" data-target="#"><i class="fas fa-paper-plane"></i> Cancel </button>
                <button type="submit" class="btn btn-outline-success btn-sm float-right" id="btnSubmit"><i class="fas fa-paper-plane"></i> <span id="spanSaveText">Save</span> </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalItemType" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <h4 id="modalHeading" class="modal-title">@*<i class="fas fa-angle-double-right"></i>*@<span id="spanModalHeadItemType">Add New ItemType</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmItemType">
                    <input type="hidden" name="Id" id="hdfItemTypeId" />
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="ddlWarehouseName" class="control-label font-weight-bold">Warehouse Name</label>
                            @Html.DropDownList("ddlWarehouseName", (IEnumerable<SelectListItem>)ViewBag.ddlWarehouse, "--Select Warehouse--", new { @class = "form-control form-control-sm" })
                            <span class="error hide required-warehouseNameitemType font-weight-bold">Required Warehouse Name!</span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtitemTypeName" class="control-label font-weight-bold">ItemTypeName</label>
                            <input type="text" name="txtitemTypeName" value="" id="txtitemTypeName" class="form-control form-control-sm" />
                            <span class="error hide required-itemTypeName font-weight-bold">Input ItemType Name!</span>
                            <span class="error hide duplicate-itemTypeName font-weight-bold">Already ItemType Exist!</span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtShortName" class="control-label font-weight-bold">Short Name</label>
                            <input type="text" name="txtShortName" value="" id="txtShortName" class="form-control form-control-sm" maxlength="3" />
                            <span class="error hide required-shortName font-weight-bold">Input Short Name!</span>
                            <span class="error hide duplicate-shortName font-weight-bold">Already Short Name Exist!</span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtRemarksitemType" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <div class="form-control">
                                <input type="checkbox" id="chkStatestatusitemType" /> <b>Is Active?</b>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer btn-default">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-outline-danger btn-sm float-right" data-dismiss="modal" data-target="#"><i class="fas fa-paper-plane"></i> Cancel </button>
                <button type="submit" class="btn btn-outline-success btn-sm float-right" id="btnSubmititemType"><i class="fas fa-paper-plane"></i> <span id="spanSaveTextItemType">Save</span> </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalUnit" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <h4 id="modalHeading" class="modal-title"><span id="spanModalHeadUnit">Add New Unit</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmUnit">
                    <input type="hidden" name="Id" id="hdfUnitId" />
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtUnitName" class="control-label font-weight-bold">UnitName</label>
                            <input type="text" name="txtUnitName" value="" id="txtUnitName" class="form-control form-control-sm" />
                            <span class="error hide required-unitName font-weight-bold">Input Unit Name!</span>
                            <span class="error hide duplicate-unitName font-weight-bold">Already UnitName Exist!</span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtUnitSymbol" class="control-label font-weight-bold">UnitSymbol</label>
                            <input type="text" name="txtUnitSymbol" value="" id="txtUnitSymbol" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtRemarksUnit" class="form-control form-control-sm" />
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer btn-default">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-outline-danger btn-sm float-right" data-dismiss="modal" data-target="#"><i class="fas fa-paper-plane"></i> Cancel </button>
                <button type="submit" class="btn btn-outline-success btn-sm float-right" id="btnSubmitUnit"><i class="fas fa-paper-plane"></i> <span id="spanSaveTextUnit">Save </span> </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalItem" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <h4 id="modalHeading" class="modal-title"><span id="spanModalHeadItem">Add New Item</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmItem">
                    <input type="hidden" name="Id" id="hdfItemId" />
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtItemName" class="control-label font-weight-bold">Item Name</label>
                            <input type="text" name="itemName" value="" id="txtItemName" class="form-control form-control-sm" />
                            <span class="error hide required-itemName font-weight-bold">Input Item Name!</span>
                            <span class="error hide duplicate-itemName font-weight-bold">Already ItemName Exist!</span>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="ddlItemTypeName" class="control-label font-weight-bold">ItemType Name</label>
                            @Html.DropDownList("ddlItemTypeName", (IEnumerable<SelectListItem>)ViewBag.ddlItemTypeName, "--Select ItemType--", new { @class = "form-control form-control-sm" })
                            <span class="error hide required-itemTypeName font-weight-bold">Required ItemaType Name!</span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="ddlUnitName" class="control-label font-weight-bold">Unit Name</label>
                            @Html.DropDownList("ddlUnitName", (IEnumerable<SelectListItem>)ViewBag.ddlUnitName, "--Select UnitName--", new { @class = "form-control form-control-sm" })
                            <span class="error hide required-UnitName font-weight-bold">Required Unit Name!</span>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="txtRemarks" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtRemarksItem" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <div class="form-control form-control-sm">
                                <input type="checkbox" id="chkStatestatusItem" /> <b>Is Active?</b>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer btn-default">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-outline-danger btn-sm float-right" data-dismiss="modal" data-target="#"><i class="fas fa-paper-plane"></i> Cancel </button>
                <button type="submit" class="btn btn-outline-success btn-sm float-right" id="btnSubmitItem"><i class="fas fa-paper-plane"></i> <span id="spanSaveTextItem">Save</span> </button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalIQC" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <h4 id="modalHeading" class="modal-title">@*<i class="fas fa-angle-double-right"></i>*@<span id="spanModalHeadIQC">Add New IQC</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmIQC">
                    <input type="hidden" name="Id" id="hdfIQCId" />
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtIQCName" class="control-label font-weight-bold">IQC Name</label>
                            <input type="text" name="IQCName" value="" id="txtIQCName" class="form-control form-control-sm" />
                            <span class="error hide required-IQCName font-weight-bold">Input IQC Name!</span>
                            <span class="error hide duplicate-IQCName font-weight-bold">Already IQC Exist!</span>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="txtRemarksIQC" class="control-label font-weight-bold">Remarks</label>
                            <input type="text" name="remarks" value="" id="txtRemarksIQC" class="form-control form-control-sm" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <div class="form-control">
                                <input type="checkbox" id="chkStatestatusIQC" /> <b>Is Active?</b>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer btn-default">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-outline-danger btn-sm float-right" data-dismiss="modal" data-target="#"><i class="fas fa-paper-plane"></i> Cancel </button>
                <button type="submit" class="btn btn-outline-success btn-sm float-right" id="btnSubmitIQC"><i class="fas fa-paper-plane"></i> <span id="spanSaveTextIQC">Save</span> </button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="modalDescription" role="dialog" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert-secondary">
                <h4 id="modalHeading" class="modal-title"><span id="spanModalHeadDescription">Update Description</span></h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span></button>
            </div>
            <div class="modal-body">
                <form id="frmDesctiption">
                    <input type="hidden" name="description" id="hdfDescriptionId" />
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label for="txtTACNo" class="control-label font-weight-bold">Model</label>
                            <input type="text" name="Model" value="" id="txtModel" class="form-control form-control-sm" />
                        </div>
                        <div class="form-group col-md-12">
                            <label for="txtTACNo" class="control-label font-weight-bold">TAC No</label>
                            <input type="number" name="TACNo" value="" id="txtTACNo" class="form-control form-control-sm" />
                            <span class="error hide req-tac">Input TAC!</span>
                        </div>
                        <div class="form-group col-md-12">
                            <label for="txtEndPoint" class="control-label font-weight-bold">End Point</label>
                            <input type="number" name="EndPoint" value="" id="txtEndPoint" class="form-control form-control-sm" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer btn-default">
                <div class="col-md-6">
                    <div id="msg1" class="alert alert-success hide float-left">
                        Data has been saved Successful!
                    </div>
                    <div id="msg2" class="alert alert-danger hide float-left">
                        Data has been failed to save!
                    </div>
                </div>
                <button type="button" class="btn btn-outline-danger btn-sm float-right" data-dismiss="modal" data-target="#"><i class="fas fa-paper-plane"></i> Cancel </button>
                <button type="submit" class="btn btn-outline-success btn-sm float-right" id="btnSubmitDescription"><i class="fas fa-paper-plane"></i> <span id="spanSaveTextDescription">Update</span> </button>
            </div>
        </div>
    </div>
</div>

@section scripts{

    <script type="text/javascript">

        var txtWarehouseName = $("#txtWarehousename");
        var txtRemarks = $("#txtRemarks");
        var chkStatestatus = $("#chkStatestatus");
        var hdfWarehouseId = $("#hdfWarehouseId");

        $(document).ready(function () {
            tableInitializeForWarehouse();
        })

        function tableInitializeForWarehouse() {
            $('#tblWarehouseData').DataTable({
                "paging": true,
                "lengthChange": false,
                "searching": false,
                "ordering": false,
                "info": false,
                "autoWidth": false,
            });
        }

        function LoadWarehouseDataTable() {
            $.when(getReqWithData(dataType.html, type.get, '/Inventory/_GetWarehousePartialList', null)).then(function (res, status) {
                console.log(res);
                if (status === "success") {
                    $("#dataContainer").empty();
                    $("#dataContainer").append(res);
                    tableInitializeForWarehouse();
                }
            }).fail(function (err) { console.log(err) })
        }

        function OpenModal() {
            $("#spanModalHead").text('Create Warehouse');
            $("#spanSaveText").text('Save');
            $("#modalWarehouse").modal("show");
            $(".error").addClass("hide");
        }

        $("#btnAddNew").click(function (e) {
            e.preventDefault();
            OpenModal();
            clearCtrl();
        })

        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            console.log("btnsubmit click");
            $(".error").addClass("hide");
            if (validateForm() == true) {
                var data = JSON.stringify({ Id: TryParseInt(hdfWarehouseId.val(), 0), WarehouseName: txtWarehouseName.val(), Remarks: txtRemarks.val(), IsActive: chkStatestatus.is(":checked") });
                console.log(data);
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveWarehouse', data, getToken())).then(function (res, status) {
                    console.log(status);
                    console.log(res);
                    if (res == true) {
                        //message("#msg1", "#modalWarehouse");
                        $("#modalWarehouse").modal("toggle");
                        toastrSuccessAlert(execuStatus.successSave);
                        LoadWarehouseDataTable();
                    }
                    else {
                        //message("#msg2");
                        toastrErrorAlert(execuStatus.fail);
                    }
                    enable("#btnSubmit");
                }).fail(function (err) {
                    console.log(err);
                    enable("#btnSubmit");
                });
            }

        })

        $(document).on("click", "a.data-edit-item", function (e) {
            e.preventDefault()
            clearCtrl();
            var row = $(this).parent().parents('tr');
            var td1 = row.find('td:eq(1)').html();
            var td2 = row.find('td:eq(2)').html();
            var td3 = row.find('td:eq(6)').html();
            var td4 = row.find('td:eq(5)').attr("data-val"); //row.children('td').eq()//
            hdfWarehouseId.val(td1);
            txtWarehouseName.val(td2);
            txtRemarks.val(td3);
            chkStatestatus.prop("checked", false);
            if (td4.toLowerCase() === 'active') {
                chkStatestatus.prop("checked", true);
            }

            OpenModal()
            $("#spanModalHead").text('Update Warehouse')
            $("#spanSaveText").text('Update');
        })
        function clearCtrl() {
            hdfWarehouseId.val('0');
            txtWarehouseName.val('');
            txtRemarks.val('');
            chkStatestatus.prop("checked", false);

        }
        //$(".data-edit-item").click(function (e) {
        //    e.preventDefault()
        //    OpenModal()
        //    $("#spanModalHead").text('Update Warehouse')
        //    $("#spanSaveText").text('Update');
        //});


        function validateForm() {
            $(".error").addClass("hide");
            var isValid = true;
            if ($.trim(txtWarehouseName.val()) == "") {
                $(".required-warehouseName").removeClass("hide");
                isValid = false;
            }
            else {
                var id = TryParseInt(hdfWarehouseId.val(), 0);
                if (ajaxBooleanChecker(JSON.stringify({ Id: id, WarehouseName: txtWarehouseName.val().trim() }), '/Common/IsDuplicateWarehouseName', getToken()) == true) {
                    $(".duplicate-warehouseName").removeClass("hide");
                    isValid = false;
                }
            }
            return isValid;
        }

    </script>

    <script type="text/javascript">

        var hdfDescriptionId = $("#hdfDescriptionId");
        var txtModel = $("#txtModel");
        var txtTACNo = $("#txtTACNo");
        var txtEndPoint = $("#txtEndPoint");

        $(document).ready(function () {
            $('#tblDescriptionData').DataTable({
                "paging": false,
                "lengthChange": false,
                "searching": false,
                "ordering": false,
                "info": false,
                "autoWidth": false,
                "pageLength": 10,
            });
        })

        function OpenDescriptionModel() {
            txtModel.val('');
            hdfDescriptionId.val('0');
            txtTACNo.val('');
            txtEndPoint.val('');
            $(".error").addClass('hide');
            $("#modalDescription").modal("show");
        }

        $(document).on('click', 'a.data-item-description', function (e) {
            e.preventDefault();
            OpenDescriptionModel();
            var tds = $(this).parent().parents('tr').children('td');
            hdfDescriptionId.val(tds.eq(1).html());
            txtModel.val(tds.eq(3).html());
            txtTACNo.val(tds.eq(4).html());
        })

        function validateDescriptionTAC() {
            var isValid = true;
            $(".error").addClass('hide');
            if (txtTACNo.val() == '') {
                $(".req-tac").removeClass('hide');
                isValid = false;
            }
            if (TryParseInt(hdfDescriptionId.val(), 0) <= 0) {
                bootbox.alert("Maodel Not found");
                isValid = false;
            }
            return isValid;
        }

        $("#btnSubmitDescription").click(function (e) {
            e.preventDefault();
            if (validateDescriptionTAC()) {
                disable("#btnSubmitDescription");
                var data = JSON.stringify({ DescriptionId: TryParseInt(hdfDescriptionId.val(), 0), TAC: txtTACNo.val(), EndPoint: TryParseInt(txtEndPoint.val(),0) })
                console.log(data);
                //return;
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, type.post, '/Inventory/SaveDescriptionTAC', data, getToken())).then(function (res,status) {
                    console.log(res);
                    if (res === true) {
                        txtModel.val('');
                        hdfDescriptionId.val('0');
                        txtTACNo.val('');
                        txtEndPoint.val('');
                        $("#modalDescription").modal("toggle");
                        toastrSuccessAlert(execuStatus.successSave);
                        LoadDescriptionDataTable();
                    }
                    else {
                        toastrErrorAlert(execuStatus.fail);
                    }
                    enable("#btnSubmitDescription");
                }).fail(function (error) {
                    console.log(error);
                    toastrErrorAlert(execuStatus.fail);
                    enable("#btnSubmitDescription");
                })
            }
        })

        //dataContainer2

        function LoadDescriptionDataTable() {

            $.when(getReqWithData(dataType.html, type.get, '/Inventory/_GetDescriptionPartialList', null)).then(function (res, status) {
                console.log(res);
                if (status === "success") {
                    $("#dataContainer2").fadeOut('500', function () {
                        $("#dataContainer2").empty();
                        $("#dataContainer2").append(res).fadeIn('500');
                    });
                }
            }).fail(function (error) {
                console.log(error);
            })
        }

    </script>

    <script type="text/javascript">

        var hdfItemTypeId = $("#hdfItemTypeId");
        var ddlWarehouseName = $("#ddlWarehouseName");
        var txtitemTypeName = $("#txtitemTypeName");
        var txtRemarksitemType = $("#txtRemarksitemType");
        var chkStatestatusitemType = $("#chkStatestatusitemType");
        var txtShortName = $("#txtShortName");

        $(document).ready(function () {
            tableInitializeForItemType();
        })

        function tableInitializeForItemType() {
            $('#tblItemTypeData').DataTable({
                "paging": true,
                "lengthChange": false,
                "searching": false,
                "ordering": false,
                "info": false,
                "autoWidth": false,
                "pageLength": 10,
            });
        }

        function LoadItemTypeDataTable() {
            $.when(getReqWithData(dataType.html, type.get, '/Inventory/_GetItemTypePartialList', null)).then(function (res, status) {
                console.log(res);
                if (status === "success") {
                    $("#dataContainer3").empty();
                    $("#dataContainer3").append(res);
                    tableInitializeForItemType();
                }
            }).fail(function (err) {
                console.log(err);
            })
        }

        function OpenModalitemType() {
            $("#spanModalHeadItemType").text('Add New ItemType');
            $("#spanSaveTextItemType").text('Save');
            $("#modalItemType").modal("show");
            $(".error").addClass("hide");
        }

        $("#btnAddNewitemType").click(function (e) {
            e.preventDefault();
            clearCtrlItemType();
            OpenModalitemType();
        })


        function validateFormitemType() {
            $(".error").addClass("hide");
            var isValid = true;
            if ($.trim(ddlWarehouseName.val()) == "") {
                $(".required-warehouseNameitemType").removeClass("hide");
                isValid = false;
            }
            else {
                var id = TryParseInt(hdfItemTypeId.val(), 0);
                if (ajaxBooleanChecker(JSON.stringify({ id: id, itemTypeName: txtitemTypeName.val().trim(), warehouseId: TryParseInt(ddlWarehouseName.val(), 0) }), '/Common/IsDuplicateItemTypeName', getToken()) == true) {
                    $(".duplicate-itemTypeName").removeClass("hide");
                    isValid = false;
                }
            }
            if ($.trim(txtitemTypeName.val()) == "") {
                $(".required-itemTypeName").removeClass("hide");
                isValid = false;
            }
            if (txtShortName.val() === '') {
                $(".required-shortName").removeClass("hide");
                isValid = false;
            }
            else {
                var id = TryParseInt(hdfItemTypeId.val(), 0);
                if (ajaxBooleanChecker(JSON.stringify({ id: id, shortName: txtShortName.val().trim() }), '/Common/IsDuplicateItemTypeShortName', getToken()) == true) {
                    $(".duplicate-shortName").removeClass("hide");
                    isValid = false;
                }
            }
            return isValid;
        }


        $("#btnSubmititemType").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            if (validateFormitemType() == true) {
                var data = JSON.stringify({ ItemId: TryParseInt(hdfItemTypeId.val(), 0), WarehouseId: ddlWarehouseName.val(), ItemName: txtitemTypeName.val(), Remarks: txtRemarksitemType.val(), IsActive: chkStatestatusitemType.is(":checked"), ShortName: txtShortName.val().trim() });
                console.log(data);
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveItemType', data, getToken())).then(function (res, status) {
                    console.log(status);
                    console.log(res);
                    if (res == true) {
                        //message("#msg1", "#modalItemType");
                        $("#modalItemType").modal("toggle");
                        toastrSuccessAlert(execuStatus.successSave);
                        LoadItemTypeDataTable();
                    }
                    else {
                        //message("#msg2");
                        toastrErrorAlert(execuStatus.fail);
                    }
                    enable("#btnSubmititemType");
                }).fail(function (err) {
                    console.log(err);
                    enable("#btnSubmititemType");
                });
            }

        })

        //$(".data-edit-item-type").click(function (e) {
        //    e.preventDefault()
        //    OpenModalitemType()
        //    $("#spanModalHeadItemType").text('Update ItemType');
        //    $("#spanSaveTextItemType").text('Update');
        //});

        $(document).on("click", "a.data-edit-item-type", function (e) {
            e.preventDefault()
            clearCtrlItemType();
            var row = $(this).parent().parents('tr');
            var td1 = row.find('td:eq(1)').html();
            var td2 = row.find('td:eq(2)').html();
            var td3 = row.find('td:eq(4)').html();
            var td4 = row.find('td:eq(5)').html();
            var td5 = row.find('td:eq(6)').attr("data-val");
            var td6 = row.find('td:eq(7)').html();

            hdfItemTypeId.val(td1);
            ddlWarehouseName.val(td2);
            txtitemTypeName.val(td3);
            txtRemarksitemType.val(td4);
            txtShortName.val(td6);
            chkStatestatusitemType.prop("checked", false);
            if (td5.toLowerCase() === 'active') {
                chkStatestatusitemType.prop("checked", true);
            }

            OpenModalitemType()
            $("#spanModalHeadItemType").text('Update ItemType');
            $("#spanSaveTextItemType").text('Update');
        })

        function clearCtrlItemType() {
            hdfItemTypeId.val('0');
            ddlWarehouseName.val('');
            txtitemTypeName.val('');
            txtRemarksitemType.val('');
            txtShortName.val('');
            chkStatestatusitemType.prop("checked", false);
        }
    </script>

    <script type="text/javascript">
        var hdfUnitId = $("#hdfUnitId");
        var txtUnitName = $("#txtUnitName");
        var txtUnitSymbol = $("#txtUnitSymbol");
        var txtRemarksUnit = $("#txtRemarksUnit");

        $(document).ready(function () {
            tableInitializeForUnit()
        })

        function tableInitializeForUnit() {
            $('#tblUnitData').DataTable({
                "paging": true,
                "lengthChange": false,
                "searching": false,
                "ordering": false,
                "info": false,
                "autoWidth": false,
            });
        }

        function LoadUnitDataTable() {
            $.when(getReqWithData(dataType.html, type.get, '/Inventory/_GetAllUnitPartialList', null)).then(function (res, status) {
                console.log(res);
                if (status === "success") {
                    $("#dataContainer4").empty();
                    $("#dataContainer4").append(res);
                    tableInitializeForUnit();
                }
            }).fail(function (error) {
                console.log(error);
            })
        }

        function OpenModalUnit() {
            $("#spanModalHeadUnit").text('Add New Unit');
            $("#spanSaveTextUnit").text('Save');
            $("#modalUnit").modal("show");
            $(".error").addClass("hide");
        }

        $("#btnAddNewUnit").click(function (e) {
            e.preventDefault();
            clearCtrlUnit();
            OpenModalUnit();
        })


        $("#btnSubmitUnit").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            if (validateFormUnit() == true) {
                var data = JSON.stringify({ UnitId: TryParseInt(hdfUnitId.val(), 0), UnitName: txtUnitName.val(), UnitSymbol: txtUnitSymbol.val(), Remarks: txtRemarksUnit.val() });
                console.log(data);
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveUnit', data, getToken())).then(function (res, status) {
                    console.log(status);
                    console.log(res);
                    if (res == true) {
                        //message("#msg1", "#modalUnit");
                        $("#modalUnit").modal("toggle");
                        toastrSuccessAlert(execuStatus.successSave);
                        LoadUnitDataTable();
                    }
                    else {
                        //message("#msg2");
                        toastrErrorAlert(execuStatus.fail);
                    }
                    enable("#btnSubmitUnit");
                }).fail(function (err) {
                    console.log(err);
                    enable("#btnSubmitUnit");
                });
            }

        })

        function validateFormUnit() {
            $(".error").addClass("hide");
            var isValid = true;
            if ($.trim(txtUnitName.val()) == "") {
                $(".required-unitName").removeClass("hide");
                isValid = false;
            }
            else {
                var id = TryParseInt(hdfUnitId.val(), 0);
                if (ajaxBooleanChecker(JSON.stringify({ id: id, unitName: txtUnitName.val().trim() }), '/Common/IsDuplicateUnitName', getToken()) == true) {
                    $(".duplicate-unitName").removeClass("hide");
                    isValid = false;
                }

            }
            return isValid;
        }


        $(document).on("click", "a.data-edit-item-unit", function (e) {
            e.preventDefault()
            clearCtrlUnit();
            var row = $(this).parent().parents('tr');
            var td1 = row.find('td:eq(1)').html();
            var td2 = row.find('td:eq(2)').html();
            var td3 = row.find('td:eq(3)').html();
            var td4 = row.find('td:eq(4)').html();

            hdfUnitId.val(td1);
            txtUnitName.val(td2);
            txtUnitSymbol.val(td3)
            txtRemarksUnit.val(td4);

            OpenModalUnit();
            $("#spanModalHead").text('Update Unit');
            $("#spanSaveTextUnit").text('Update');
        })

        function clearCtrlUnit() {
            hdfUnitId.val('0');
            txtUnitName.val('');
            txtUnitSymbol.val('');
            txtRemarksUnit.val('');

        }
        //$(".data-edit-item-unit").click(function (e) {
        //    e.preventDefault()
        //    OpenModalUnit()
        //    $("#spanModalHead").text('Update Unit');
        //    $("#spanSaveTextUnit").text('Update');
        //});
    </script>

    <script type="text/javascript">
        var hdfItemId = $("#hdfItemId");
        var txtItemName = $("#txtItemName");
        var ddlItemTypeName = $("#ddlItemTypeName");
        var ddlUnitName = $("#ddlUnitName");
        var txtRemarksItem = $("#txtRemarksItem");
        var chkStatestatusItem = $("#chkStatestatusItem");

        $(document).ready(function () {
            tableInitializeForItem();
        })

        function tableInitializeForItem() {
            $('#tblItemData').DataTable({
                "paging": true,
                "lengthChange": false,
                "searching": false,
                "ordering": false,
                "info": false,
                "autoWidth": false,
                "pageLength": 10,

            });
        }

        function OpenModalItem() {

            $("#spanModalHeadItem").text('Add New Item');
            $("#spanSaveTextItem").text('Save');
            $("#modalItem").modal("show");
            $(".error").addClass("hide");
            //alert('Modal');
        }

        $("#btnAddNewItem").click(function (e) {
            e.preventDefault();
            clearCtrlItem();
            OpenModalItem();
        })

        function LoadItemDataTable() {
            $.when(getReqWithData(dataType.html, type.get, '/Inventory/_GetItemPartialList', null)).then(function (res, status) {
                console.log(res);
                if (status === "success") {
                    $("#dataContainer5").empty();
                    $("#dataContainer5").append(res);
                    tableInitializeForItem();

                }
            }).fail(function (error) {
                console.log(error);
            })
        }

        //Data add
        $("#btnSubmitItem").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            if (validateFormItem() == true) {
                var data = JSON.stringify({ ItemId: TryParseInt(hdfItemId.val(), 0), ItemName: txtItemName.val(), ItemTypeId: ddlItemTypeName.val(), UnitId: ddlUnitName.val(), Remarks: txtRemarksItem.val(), IsActive: chkStatestatusItem.is(":checked") });
                console.log(data);
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveItem', data, getToken())).then(function (res, status) {
                    console.log(status);
                    console.log(res);
                    if (res == true) {
                        $("#modalItem").modal("toggle");
                        toastrSuccessAlert(execuStatus.successSave);
                        LoadItemDataTable();
                    }
                    else {
                        toastrErrorAlert(execuStatus.fail);
                    }
                    enable("#btnSubmitItem");
                }).fail(function (err) {
                    console.log(err);
                    enable("#btnSubmitItem");
                });
            }

        })
        //validation
        function validateFormItem() {
            $(".error").addClass("hide");
            var isValid = true;
            if ($.trim(txtItemName.val()) == "") {
                $(".required-itemName").removeClass("hide");
                isValid = false;
            }
            else {
                var id = TryParseInt(hdfItemId.val(), 0);
                if (ajaxBooleanChecker(JSON.stringify({ id: id, itemName: txtItemName.val().trim() }), '/Common/IsDuplicateItemName', getToken()) == true) {
                    $(".duplicate-itemName").removeClass("hide");
                    isValid = false;
                }
            }
            if ($.trim(ddlItemTypeName.val()) == "") {
                $(".required-itemTypeName").removeClass("hide");
                isValid = false;
            }
            if ($.trim(ddlUnitName.val()) == "") {
                $(".required-UnitName").removeClass("hide");
                isValid = false;
            }

            return isValid;
        }

        $(document).on("click", ".data-edit-item-Item", function (e) {
            e.preventDefault()
            //alert("Click")
            clearCtrlItem();

            var row = $(this).parent().parents('tr');
            var td1 = row.find('td:eq(1)').html();
            var td2 = row.find('td:eq(2)').html();
            var td3 = row.find('td:eq(4)').html();
            var td4 = row.find('td:eq(6)').html();
            var td5 = row.find('td:eq(8)').html();
            var td6 = row.find('td:eq(9)').attr("data-val");

            hdfItemId.val(td1);
            ddlItemTypeName.val(td2);
            txtItemName.val(td3);
            ddlUnitName.val(td4);
            txtRemarksItem.val(td5);
            chkStatestatusItem.prop("checked", false);
            if (td6.toLowerCase() === 'active') {
                chkStatestatusItem.prop("checked", true);
            }
            OpenModalItem();
            $("#spanModalHeadItem").text('Update Item');
            $("#spanSaveTextItem").text('Update');

        })
        //$(".data-edit-item-Item").click(function (e) {
        //    e.preventDefault()

        //    $("#spanModalHeadItem").text('Update Item');
        //    $("#spanSaveTextItem").text('Update');
        //});
        function clearCtrlItem() {
            hdfItemId.val('0');
            txtItemName.val('');
            ddlItemTypeName.val('');
            ddlUnitName.val('');
            txtRemarksItem.val('');
            chkStatestatusItem.prop("checked", false);
        }
    </script>

    <script type="text/javascript">

        var txtIQCName = $("#txtIQCName");
        var txtRemarksIQC = $("#txtRemarksIQC");
        var chkStatestatusIQC = $("#chkStatestatusIQC");
        var hdfIQCId = $("#hdfIQCId");

        $(document).ready(function () {
            tableInitializeForIQC();
        })

        function tableInitializeForIQC() {
            $('#tblIQCData').DataTable({
                "paging": true,
                "lengthChange": false,
                "searching": false,
                "ordering": false,
                "info": false,
                "autoWidth": false,
            });
        }

        function LoadIQCDataTable() {
            $.when(getReqWithData(dataType.html, type.get, '/Inventory/GetIQCList', null)).then(function (res, status) {
                console.log(res);
                if (status === "success") {
                    $("#dataContainer6").empty();
                    $("#dataContainer6").append(res);
                    tableInitializeForIQC();
                }
            }).fail(function (err) { console.log(err) })
        }

        function OpenModalIQC() {
            $("#spanModalHeadIQC").text('Create IQC');
            $("#spanSaveTextIQC").text('Save');
            $("#modalIQC").modal("show");
            $(".error").addClass("hide");
        }

        $("#btnAddNewIQC").click(function (e) {
            e.preventDefault();
            OpenModalIQC();
            clearCtrlIQC();
        })

        $("#btnSubmitIQC").click(function (e) {
            e.preventDefault();
            $(".error").addClass("hide");
            if (validateFormIQC() == true) {
                var data = JSON.stringify({ Id: TryParseInt(hdfIQCId.val(), 0), IQCName: txtIQCName.val(), Remarks: txtRemarksIQC.val(), IsActive: chkStatestatusIQC.is(":checked") });
                console.log(data);
                $.when(postReqWithToken(dataType.applicationJson, dataType.json, 'POST', '/Inventory/SaveIQC', data, getToken())).then(function (res, status) {
                    console.log(status);
                    console.log(res);
                    if (res == true) {
                        //message("#msg1", "#modalWarehouse");
                        $("#modalIQC").modal("toggle");
                        toastrSuccessAlert(execuStatus.successSave);
                        LoadIQCDataTable();
                    }
                    else {
                        //message("#msg2");
                        toastrErrorAlert(execuStatus.fail);
                    }
                    enable("#btnSubmitIQC");
                }).fail(function (err) {
                    console.log(err);
                    enable("#btnSubmitIQC");
                });
            }

        })

        $(document).on("click", "a.data-edit-IQC", function (e) {
            e.preventDefault()
            clearCtrl();
            var row = $(this).parent().parents('tr');
            var td1 = row.find('td:eq(1)').html();
            var td2 = row.find('td:eq(2)').html();
            var td3 = row.find('td:eq(6)').html();
            var td4 = row.find('td:eq(5)').attr("data-val"); //row.children('td').eq()//
            hdfIQCId.val(td1);
            txtIQCName.val(td2);
            txtRemarksIQC.val(td3);
            chkStatestatusIQC.prop("checked", false);
            if (td4.toLowerCase() === 'active') {
                chkStatestatusIQC.prop("checked", true);
            }

            OpenModalIQC();
            $("#spanModalHeadIQC").text('Update IQC')
            $("#spanSaveTextIQC").text('Update');
        })
        function clearCtrlIQC() {
            hdfIQCId.val('0');
            txtIQCName.val('');
            txtRemarksIQC.val('');
            chkStatestatusIQC.prop("checked", false);

        }

        function validateFormIQC() {
            $(".error").addClass("hide");
            var isValid = true;
            if ($.trim(txtIQCName.val()) == "") {
                $(".required-IQCName").removeClass("hide");
                isValid = false;
            }
            else {
                var id = TryParseInt(hdfIQCId.val(), 0);
                if (ajaxBooleanChecker(JSON.stringify({ iqcId: id, iqcName: txtIQCName.val().trim() }), '/Common/IsDuplicateIQCName', getToken()) == true) {
                    $(".duplicate-IQCName").removeClass("hide");
                    isValid = false;
                }
            }
            return isValid;
        }

    </script>
}


